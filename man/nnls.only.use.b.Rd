% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nnls.only.use.b.R
\name{nnls.only.use.b}
\alias{nnls.only.use.b}
\title{Only use distance matrix and circular ordering as the input for nnls}
\usage{
nnls.only.use.b(M, circular.ordering)
}
\arguments{
\item{M}{the distance matrix (the labels of rows and columns are both from 1 to n)}

\item{circular.ordering}{the circular ordering for a network.}
}
\value{
A list which include:

\code{x}, the splits weights estimated by nnls;

\code{fitted}, the fitted distance between every taxa pair;

\code{deviance}, the residual sum of squares between input distance and fitted distance.

(The ordering of splits in result is:
\{1|2...n\}, \{1,2|3...n\},..., \{1...n-1|n\}, \{2|1,3...n\},..., \{2...n-1|1,n\},..., \{n-1|1...n-2,n\})
}
\description{
Using nnls (Non-negative least squares) to calculate weights of splits which are consist with a circular ordering.
The input are the distance matrix and the circular ordering.
Generally, nnls use \code{A} and \code{b} as input and calculate \code{x} for \code{min(|Ax-b|^2)}.
This function will calculate the corresponding matrix \code{A} in Fortran instead of in R which will use less memory and run time.
And the vector \code{b} will be get from distance matrix.
This function is only an intermediate step of \code{\link{heuristic.method}} and we provide this function in package for test.
}
